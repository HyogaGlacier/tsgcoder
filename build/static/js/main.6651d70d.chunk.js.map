{"version":3,"sources":["redux/action.jsx","user/Login.jsx","user/UserList.jsx","user/UserDetail.jsx","user/UserNew.jsx","user/UserEdit.jsx","tester/CodeForm.jsx","tester/CodeResult.jsx","TSGCoder.jsx","redux/reducer.jsx","index.jsx"],"names":["toggle","type","payload","update","val","Login","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","href","React","Component","UserList","_this","state","users","loadUserList","bind","assertThisInitialized","_this2","fetch","then","response","json","response_json","setState","catch","error","console","user_list","map","user","key","concat","id","scope","Link","to","name","twitter","Button","color","action","method","value","readOnly","Table","UserDetail","match","params","loadUser","cache","_this3","attributes_array","attr","toString","reduce","accumulator","idx","UserNew","onChangeField","e","target","Form","FormGroup","row","Label","for","sm","Col","Input","placeholder","onChange","note","UserEdit","defaultValue","checked","CodeFormComponent","res","actions","langs","ret","log","code","stdin","CodeForm","connect","dispatch","bindActionCreators","myActions","CodeResultComponent","loadCode","renderCode","codeId","clearInterval","timer","lang","stdout","stderr","src","class","Spinner","setInterval","Jumbotron","className","CodeResult","TSGCoderComponent","BrowserRouter","Navbar","light","expand","NavbarBrand","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","NavItem","NavLink","Route","exact","path","component","TSGCoder","initialState","store","createStore","arguments","length","undefined","objectSpread","ReactDOM","render","es","src_TSGCoder","document","getElementById"],"mappings":"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","file":"static/js/main.6651d70d.chunk.js","sourcesContent":["export const toggle = (() => {\n  return {\n    type: 'TOGGLE',\n    payload: {}\n  };\n});\n\nexport const update = ((val) => {\n  return {\n    type: 'UPDATE',\n    payload: val\n  };\n});\n\n","import React from 'react';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <a href=\"/auth/twitter\">Sign in with Twitter</a>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Compoenent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Table, Button, Form } from 'reactstrap';\n\nclass UserList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n    };\n\n    this.loadUserList = this.loadUserList.bind(this);\n  }\n  \n  loadUserList() {\n    return fetch(\"/_api/users\")\n      .then(response => response.json())\n      .then(response_json => this.setState({ users: response_json.users, }))\n      .catch(error => {\n        console.error(error);\n      });\n  }\n\n  componentWillMount() {\n    this.loadUserList();\n  }\n\n  render() {\n    const user_list = this.state.users.map(user => {\n      return (\n        <tr key={`UserList-${user.id}`}>\n          <th scope=\"row\">\n            <Link to={`/users/${user.id}`}>{user.id}</Link>\n          </th>\n          <td>{user.name}</td>\n          <td>{user.twitter}</td>\n          <td>\n            <Link to={`/users/${user.id}/edit`}><Button color=\"primary\">Edit</Button></Link>\n            <form action={'/_api/users/' + user.id + '?_method=DELETE'} method=\"post\">\n              <input name=\"_method\" type=\"hidden\" value=\"DELETE\" readOnly />\n              <input name=\"id\" type=\"hidden\" value={user.id} readOnly />\n              <input type=\"submit\" value=\"Delete\" />\n            </form>\n          </td>\n        </tr>\n      );\n    });\n\n    return (\n      <Table>\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Name</th>\n            <th>Twitter</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {user_list}\n        </tbody>\n      </Table>\n    );\n  }\n}\n\nexport default UserList;\n","import React, { Component } from 'react';\n\nclass UserDetail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.match.params.id,\n      user: {},\n    };\n\n    this.loadUser = this.loadUser.bind(this);\n  }\n\n  loadUser() {\n    return fetch(`/_api/users/${this.state.id}`)\n      .then(response => response.json())\n      .then(response_json => this.setState({ user: response_json.user }))\n      .cache(error => {\n        console.error(error);\n      });\n  }\n\n  componentWillMount() {\n    this.loadUser();\n  }\n\n  render() {\n    const attributes_array = [\"name\", \"twitter\", \"class\", \"note\", \"created_at\"].map(attr => {\n      return {\n        name: attr,\n        val: this.state.user[attr] ? this.state.user[attr].toString() : '...loading'\n      };\n    });\n    return (\n      <dl>\n        {attributes_array.reduce((accumulator, attr, idx) => {\n          return accumulator.concat([\n            <dt key={`attrname-${idx}`}>{attr.name}</dt>,\n            <dd key={`attrval-${idx}`}>{attr.val}</dd>\n          ]);\n        }, [])}\n      </dl>\n    );\n  }\n}\n\nexport default  UserDetail;\n","import React from 'react';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Col,\n  Label,\n  Input } from 'reactstrap';\n\nclass UserNew extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {},\n    };\n\n    this.onChangeField = this.onChangeField.bind(this);\n  }\n\n  onChangeField(e) {\n    var user = this.state.user;\n    user[e.target.name] = e.target.value;\n    this.setState({\n      user: user\n    });\n  }\n\n  render() {\n    const user = this.state.user || {};\n    return (\n      <Form action={'/_api/users'} method='post'>\n        <input name=\"_method\" type=\"hidden\" value=\"PUT\" readOnly />\n        <FormGroup row>\n          <Label for=\"name\" sm={2}>Name</Label>\n          <Col sm={10}>\n            <Input type=\"name\" name=\"name\" id=\"name\" value={user.name} placeholder=\"Input Your Name\" onChange={this.onChangeField} />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label for=\"twitter\" sm={2}>Twitter</Label>\n          <Col sm={10}>\n            <Input type=\"name\" name=\"twitter\" id=\"twitter\" value={user.twitter} placeholder=\"Your Twitter Account(ex: @__Hyoga)\" onChange={this.onChangeField} />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label for=\"note\" sm={2}>Note</Label>\n          <Col sm={10}>\n            <Input type=\"textarea\" name=\"note\" id=\"note\" value={user.note} placeholder=\"write anything\" onChange={this.onChangeField} />\n          </Col>\n        </FormGroup>\n        <Button type=\"submit\">Register</Button>\n      </Form>\n    );\n  }\n}\n\nexport default UserNew;\n","import React, { Component } from 'react';\n\nclass UserEdit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.match.params.id,\n      user: {},\n    };\n\n    this.loadUser = this.loadUser.bind(this);\n    this.onChangeField = this.onChangeField.bind(this);\n  }\n\n  loadUser() {\n    return fetch(`/_api/users/${this.state.id}`)\n      .then(response => response.json())\n      .then(response_json => this.setState({\n        user: response_json.user,\n      }))\n      .catch(error => {\n        console.error(error);\n      });\n  }\n\n  onChangeField(e) {\n    var user = this.state.user;\n    user[e.target.name] = e.target.value;\n    this.setState({\n      user: user\n    });\n  }\n\n  componentWillMount() {\n    this.loadUser();\n  }\n\n  render() {\n    const user = this.state.user || {};\n    const id = (user.id ? <div>ID: {user.id}</div> : '');\n    return (\n      <form action={'/_api/users/' + user.id + '?_method=PUT'} method='post'>\n        <input name=\"_method\" type=\"hidden\" value=\"PUT\" readOnly />\n        {id}\n        <div>Name: <input type=\"text\" name=\"name\" value={user.name} placeholder=\"Input Your Name\" onChange={this.onChangeField} /></div>\n        <div>Twitter: <input type=\"text\" name=\"twitter\" value={user.twitter} placeholder=\"Your Twitter Account\" onChange={this.onChangeField} /></div>\n        <div>User Type: <input type=\"radio\" name=\"class\" defaultValue=\"normal\" checked={this.onChangeField} />\n                        <input type=\"radio\" name=\"class\" defaultValue=\"admin\" checked={this.onChangeField} />\n        </div>\n        <div>Note: <input type=\"text\" name=\"note\" value={user.note} placeholder=\"write anything\" onChange={this.onChangeField} /></div>\n      </form>\n    );\n  }\n}\n\nexport default UserEdit;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport {\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Button } from 'reactstrap';\nimport * as myActions from '../redux/action';\n\nclass CodeFormComponent extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    fetch('/test/langs').then(res => res.json())\n      .then(res => {\n        this.props.actions.update({langs: res.ret});\n      })\n  }\n\n  render() {\n    console.log(this.props.code);\n    return (\n      <Form action=\"/test/test\" method=\"POST\">\n        <FormGroup>\n          <Label for=\"lang\">Language</Label>\n          <Input type=\"select\" name=\"lang\" id=\"lang\">\n            {this.props.langs.map((val) => {\n              return (\n                <option>{val.name}</option>\n              );\n            })}\n          </Input>\n          <Label for=\"code\">Code</Label>\n          <Input type=\"textarea\" name=\"code\" id=\"code\" value={this.props.code} onChange={(val) => {console.log(val.target); this.props.actions.update({code: val.target.value});}} />\n          <Label for=\"stdin\">Standard Input</Label>\n          <Input type=\"textarea\" name=\"stdin\" id=\"stdin\" value={this.props.stdin} onChange={(val) => {this.props.actions.update({stdin: val.target.value});}} />\n        </FormGroup>\n        <Button type=\"submit\">Submit</Button>\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  code: state.code,\n  langs: state.langs,\n  stdin: state.stdin,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  actions: bindActionCreators(myActions, dispatch)\n});\nconst CodeForm = connect(mapStateToProps, mapDispatchToProps)(CodeFormComponent);\nexport default CodeForm;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Spinner, Jumbotron } from 'reactstrap';\nimport * as myActions from '../redux/action';\n\nclass CodeResultComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.loadCode = this.loadCode.bind(this);\n    this.renderCode = this.renderCode.bind(this);\n    this.props.actions.update({ codeId: this.props.match.params.id });\n  }\n\n  loadCode() {\n    if(this.props.state == \"finished\") {\n      clearInterval(this.timer);\n    }\n    else {\n      fetch(`/test/code/${this.props.match.params.id}`)\n        .then((res) => {\n          return res.json();\n        }).then((res) => {\n          console.log(res);\n          this.props.actions.update({\n            lang: res.lang,\n            code: res.code.code,\n            stdin: res.code.stdin,\n            stdout: res.code.stdout,\n            stderr: res.code.stderr,\n            state: res.code.state,\n          });\n        });\n    }\n  }\n\n  renderCode(src) {\n    if (src || this.props.state == \"finished\") {\n      return (\n        <div>\n          <pre class=\"prettyprint linenums\"><code>\n            {src}\n          </code></pre>\n        </div>\n      );\n    }\n    else {\n      return <Spinner color=\"light\" />\n    }\n  }\n\n  componentWillMount() {\n    this.timer = setInterval(this.loadCode, 1000);\n  }\n\n  componentWillUnMount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    return (\n      <div>\n        <Jumbotron>\n          <p className=\"lead\">Language:{this.props.lang}</p>\n          <p className=\"lead\">Source Code</p>\n          { this.renderCode(this.props.code) }\n          <p className=\"lead\">Standard Input</p>\n          { this.renderCode(this.props.stdin) }\n          <p className=\"lead\">Standard Output</p>\n          { this.renderCode(this.props.stdout) }\n          <p className=\"lead\">Standard Error</p>\n          { this.renderCode(this.props.stderr) }\n        </Jumbotron>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  codeId: state.codeId,\n  lang: state.lang,\n  code: state.code,\n  stdin: state.stdin,\n  stdout: state.stdout,\n  stderr: state.stderr,\n  state: state.state,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  actions: bindActionCreators(myActions, dispatch)\n});\nconst CodeResult = connect(mapStateToProps, mapDispatchToProps)(CodeResultComponent);\nexport default CodeResult;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport {\n  Collapse,\n  Navbar,\n  NavbarBrand,\n  NavbarToggler,\n  Nav,\n  NavItem,\n  NavLink } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as myActions from './redux/action';\nimport Login from './user/Login';\nimport UserList from './user/UserList';\nimport UserDetail from './user/UserDetail';\nimport UserNew from './user/UserNew';\nimport UserEdit from './user/UserEdit';\nimport CodeForm from './tester/CodeForm';\nimport CodeResult from './tester/CodeResult';\n\nclass TSGCoderComponent extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div>\n          <Navbar color=\"light\" light expand=\"md\">\n            <NavbarBrand href=\"/\">TSGCoder</NavbarBrand>\n            <NavbarToggler onClick={() => this.props.actions.toggle()} />\n            <Collapse isOpen={this.props.isOpen} navbar>\n              <Nav className=\"ml-auto\" navbar>\n                <NavItem>\n                  <NavLink href=\"/users\">ユーザー一覧</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink href=\"/users/new\">ユーザー追加</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink href=\"https://github.com/HyogaGlacier/tsgcoder\">Github</NavLink>\n                </NavItem>\n              </Nav>\n            </Collapse>\n          </Navbar>\n          <Route exact path='/' component={CodeForm} />\n          <Route exact path='/:id([0-9]+)' component={CodeResult} />\n          <Route exact path='/login' component={Login} />\n          <Route exact path='/users' component={UserList} />\n          <Route exact path='/users/:id([0-9]+)' component={UserDetail} />\n          <Route exact path='/users/new' component={UserNew} />\n          <Route exact path='/users/:id([0-9]+)/edit' component={UserEdit} />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({ isOpen: state.isOpen });\nconst mapDispatchToProps = (dispatch) => ({\n  actions: bindActionCreators(myActions, dispatch)\n});\nconst TSGCoder = connect(mapStateToProps, mapDispatchToProps)(TSGCoderComponent);\nexport default TSGCoder;\n","const initialState = {\n  codeId: null,\n  langs: [],\n  lang: \"\",\n  code: \"\",\n  stdin: \"\",\n  stdout: \"\",\n  stderr: \"\",\n  state: \"pending\",\n  isOpen: false,\n};\n\nexport default function reducer(state = initialState, action) {\n  console.log(\"action:\",action);\n  switch(action.type) {\n    case 'TOGGLE':\n      return {\n        ...state,\n        isOpen: state.isOpen ^ true\n      };\n    case 'UPDATE':\n      return {\n        ...state,\n        ...action.payload\n      };\n    default: \n      return state;\n  }\n};\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport TSGCoder from './TSGCoder';\nimport reducer from './redux/reducer';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <TSGCoder />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}